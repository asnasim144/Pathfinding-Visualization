{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asnas\\\\OneDrive\\\\Documents\\\\code\\\\React\\\\dream\\\\src\\\\components\\\\Graph.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport Nodes from \"./Nodes\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Graph() {\n  _s();\n  const [nodes, setNodes] = useState([]);\n  // const reference = useRef([]);\n  for (let row = 0; row < 25; row++) {\n    const currentRow = [];\n    for (let col = 0; col < 50; col++) {\n      currentRow.push([]);\n      const currentNode = {\n        col,\n        row,\n        isStart: row === 10 && col === 5,\n        isFinished: row === 10 && col === 54\n      };\n    }\n    nodes.push(currentRow);\n  }\n  useEffect(() => {\n    setNodes(nodes);\n    console.log(\"row\");\n  }, [nodes]);\n  // function sample(nextElement) {\n  //     const next_arr = [...nodes, nextElement]\n  //     setNodes(next_arr)\n  // };\n  // sample(currentRow)\n  console.log(nodes);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Graph\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), nodes.map((row, rowIdx) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: row.map((node, nodeIdx) => {\n            const {\n              isStart,\n              isFinished\n            } = node;\n            console.log(nodeIdx);\n            return /*#__PURE__*/_jsxDEV(Nodes, {\n              isStart: isStart,\n              test: \"foo\"\n            }, nodeIdx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 37\n            }, this);\n          })\n        }, rowIdx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n_s(Graph, \"PbTFKmE3ANQd50N7lqnMXthrMF4=\");\n_c = Graph;\nvar _c;\n$RefreshReg$(_c, \"Graph\");","map":{"version":3,"names":["React","Nodes","useState","useEffect","Graph","nodes","setNodes","row","currentRow","col","push","currentNode","isStart","isFinished","console","log","map","rowIdx","node","nodeIdx"],"sources":["C:/Users/asnas/OneDrive/Documents/code/React/dream/src/components/Graph.js"],"sourcesContent":["import React from \"react\";\r\nimport Nodes from \"./Nodes\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nexport default function Graph() {\r\n    const [nodes, setNodes] = useState([]);\r\n    // const reference = useRef([]);\r\n    for (let row = 0; row < 25; row++) {\r\n        const currentRow = [];\r\n        for (let col = 0; col < 50; col++) {\r\n            currentRow.push([]);\r\n            const currentNode = {\r\n                col,\r\n                row,\r\n                isStart: row === 10 && col === 5,\r\n                isFinished: row === 10 && col === 54,\r\n            };\r\n        }\r\n        nodes.push(currentRow);\r\n    }\r\n    useEffect(() => {\r\n        setNodes(nodes);\r\n        console.log(\"row\");\r\n    }, [nodes]);\r\n    // function sample(nextElement) {\r\n    //     const next_arr = [...nodes, nextElement]\r\n    //     setNodes(next_arr)\r\n    // };\r\n    // sample(currentRow)\r\n    console.log(nodes);\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"grid\">\r\n                <h1>Graph</h1>\r\n                {nodes.map((row, rowIdx) => {\r\n                    return (\r\n                        <div key={rowIdx}>\r\n                            {row.map((node, nodeIdx) => {\r\n                                const {isStart, isFinished} = node;\r\n                                console.log(nodeIdx);\r\n                                return (\r\n                                    <Nodes\r\n                                        key={nodeIdx}\r\n                                        isStart={isStart}\r\n                                        test=\"foo\"\r\n                                    ></Nodes>\r\n                                );\r\n                            })}\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,SAAS;AAC3B,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC;AAE5C,eAAe,SAASC,KAAK,GAAG;EAAA;EAC5B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EACtC;EACA,KAAK,IAAIK,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAG,EAAE,EAAEA,GAAG,EAAE,EAAE;IAC/B,MAAMC,UAAU,GAAG,EAAE;IACrB,KAAK,IAAIC,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAG,EAAE,EAAEA,GAAG,EAAE,EAAE;MAC/BD,UAAU,CAACE,IAAI,CAAC,EAAE,CAAC;MACnB,MAAMC,WAAW,GAAG;QAChBF,GAAG;QACHF,GAAG;QACHK,OAAO,EAAEL,GAAG,KAAK,EAAE,IAAIE,GAAG,KAAK,CAAC;QAChCI,UAAU,EAAEN,GAAG,KAAK,EAAE,IAAIE,GAAG,KAAK;MACtC,CAAC;IACL;IACAJ,KAAK,CAACK,IAAI,CAACF,UAAU,CAAC;EAC1B;EACAL,SAAS,CAAC,MAAM;IACZG,QAAQ,CAACD,KAAK,CAAC;IACfS,OAAO,CAACC,GAAG,CAAC,KAAK,CAAC;EACtB,CAAC,EAAE,CAACV,KAAK,CAAC,CAAC;EACX;EACA;EACA;EACA;EACA;EACAS,OAAO,CAACC,GAAG,CAACV,KAAK,CAAC;EAClB,oBACI;IAAK,SAAS,EAAC,WAAW;IAAA,uBACtB;MAAK,SAAS,EAAC,MAAM;MAAA,wBACjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAc,EACbA,KAAK,CAACW,GAAG,CAAC,CAACT,GAAG,EAAEU,MAAM,KAAK;QACxB,oBACI;UAAA,UACKV,GAAG,CAACS,GAAG,CAAC,CAACE,IAAI,EAAEC,OAAO,KAAK;YACxB,MAAM;cAACP,OAAO;cAAEC;YAAU,CAAC,GAAGK,IAAI;YAClCJ,OAAO,CAACC,GAAG,CAACI,OAAO,CAAC;YACpB,oBACI,QAAC,KAAK;cAEF,OAAO,EAAEP,OAAQ;cACjB,IAAI,EAAC;YAAK,GAFLO,OAAO;cAAA;cAAA;cAAA;YAAA,QAGP;UAEjB,CAAC;QAAC,GAXIF,MAAM;UAAA;UAAA;UAAA;QAAA,QAYV;MAEd,CAAC,CAAC;IAAA;MAAA;MAAA;MAAA;IAAA;EACA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd;AAAC,GAlDuBb,KAAK;AAAA,KAALA,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}