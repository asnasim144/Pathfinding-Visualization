[{"C:\\Users\\asnas\\OneDrive\\Documents\\code\\React\\dream\\src\\index.js":"1","C:\\Users\\asnas\\OneDrive\\Documents\\code\\React\\dream\\src\\App.js":"2","C:\\Users\\asnas\\OneDrive\\Documents\\code\\React\\dream\\src\\components\\Graph.js":"3","C:\\Users\\asnas\\OneDrive\\Documents\\code\\React\\dream\\src\\components\\Nodes.js":"4","C:\\Users\\asnas\\OneDrive\\Documents\\code\\React\\dream\\src\\components\\DummyButton.js":"5","C:\\Users\\asnas\\OneDrive\\Documents\\code\\React\\dream\\src\\components\\GraphClass.js":"6","C:\\Users\\asnas\\OneDrive\\Documents\\code\\React\\dream\\src\\components\\FindPath.js":"7","C:\\Users\\asnas\\OneDrive\\Documents\\code\\React\\dream\\src\\components\\SimplePathFinding.js":"8","C:\\Users\\asnas\\OneDrive\\Documents\\code\\React\\dream\\src\\components\\Buttons.js":"9","C:\\Users\\asnas\\OneDrive\\Documents\\code\\React\\dream\\src\\components\\Info.js":"10","C:\\Users\\asnas\\OneDrive\\Documents\\code\\React\\dream\\src\\components\\Elements.js":"11","C:\\Users\\asnas\\OneDrive\\Documents\\code\\React\\dream\\src\\components\\Nav.js":"12","C:\\Users\\asnas\\OneDrive\\Documents\\code\\React\\dream\\src\\components\\BFS.js":"13","C:\\Users\\asnas\\OneDrive\\Documents\\code\\React\\dream\\src\\components\\SelectAlgo.js":"14","C:\\Users\\asnas\\OneDrive\\Documents\\code\\React\\dream\\src\\components\\AlgorithmContext.js":"15","C:\\Users\\asnas\\OneDrive\\Documents\\code\\React\\dream\\src\\components\\algorithms\\bfsAlgo.js":"16","C:\\Users\\asnas\\OneDrive\\Documents\\code\\React\\dream\\src\\components\\algorithms\\Dijsktra.js":"17","C:\\Users\\asnas\\OneDrive\\Documents\\code\\React\\dream\\src\\components\\DFS.js":"18","C:\\Users\\asnas\\OneDrive\\Documents\\code\\React\\dream\\src\\components\\algorithms\\DFS.js":"19"},{"size":445,"mtime":1670523434672,"results":"20","hashOfConfig":"21"},{"size":340,"mtime":1675842243862,"results":"22","hashOfConfig":"21"},{"size":12765,"mtime":1675743691582,"results":"23","hashOfConfig":"21"},{"size":1480,"mtime":1673756448566,"results":"24","hashOfConfig":"21"},{"size":682,"mtime":1669985156636,"results":"25","hashOfConfig":"21"},{"size":8180,"mtime":1676120785142,"results":"26","hashOfConfig":"21"},{"size":2526,"mtime":1670596333545,"results":"27","hashOfConfig":"21"},{"size":5440,"mtime":1675705181699,"results":"28","hashOfConfig":"21"},{"size":323,"mtime":1675418440707,"results":"29","hashOfConfig":"21"},{"size":894,"mtime":1675705200404,"results":"30","hashOfConfig":"21"},{"size":940,"mtime":1675421853311,"results":"31","hashOfConfig":"21"},{"size":1481,"mtime":1676009494299,"results":"32","hashOfConfig":"21"},{"size":1432,"mtime":1676120779956,"results":"33","hashOfConfig":"21"},{"size":2200,"mtime":1676138172048,"results":"34","hashOfConfig":"21"},{"size":355,"mtime":1675943322427,"results":"35","hashOfConfig":"21"},{"size":1691,"mtime":1676130845574,"results":"36","hashOfConfig":"21"},{"size":3715,"mtime":1676120784997,"results":"37","hashOfConfig":"21"},{"size":1428,"mtime":1676133799033,"results":"38","hashOfConfig":"21"},{"size":4289,"mtime":1676169376973,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"17cmd79",{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\asnas\\OneDrive\\Documents\\code\\React\\dream\\src\\index.js",[],[],[],"C:\\Users\\asnas\\OneDrive\\Documents\\code\\React\\dream\\src\\App.js",[],[],"C:\\Users\\asnas\\OneDrive\\Documents\\code\\React\\dream\\src\\components\\Graph.js",["101","102","103"],[],"C:\\Users\\asnas\\OneDrive\\Documents\\code\\React\\dream\\src\\components\\Nodes.js",[],[],"C:\\Users\\asnas\\OneDrive\\Documents\\code\\React\\dream\\src\\components\\DummyButton.js",[],[],"C:\\Users\\asnas\\OneDrive\\Documents\\code\\React\\dream\\src\\components\\GraphClass.js",["104"],[],"C:\\Users\\asnas\\OneDrive\\Documents\\code\\React\\dream\\src\\components\\FindPath.js",[],[],"C:\\Users\\asnas\\OneDrive\\Documents\\code\\React\\dream\\src\\components\\SimplePathFinding.js",[],[],"C:\\Users\\asnas\\OneDrive\\Documents\\code\\React\\dream\\src\\components\\Buttons.js",[],[],"C:\\Users\\asnas\\OneDrive\\Documents\\code\\React\\dream\\src\\components\\Info.js",["105"],[],"C:\\Users\\asnas\\OneDrive\\Documents\\code\\React\\dream\\src\\components\\Elements.js",[],[],"C:\\Users\\asnas\\OneDrive\\Documents\\code\\React\\dream\\src\\components\\Nav.js",[],[],"C:\\Users\\asnas\\OneDrive\\Documents\\code\\React\\dream\\src\\components\\BFS.js",["106","107"],[],"C:\\Users\\asnas\\OneDrive\\Documents\\code\\React\\dream\\src\\components\\SelectAlgo.js",[],[],[],"C:\\Users\\asnas\\OneDrive\\Documents\\code\\React\\dream\\src\\components\\AlgorithmContext.js",["108","109"],[],"C:\\Users\\asnas\\OneDrive\\Documents\\code\\React\\dream\\src\\components\\algorithms\\bfsAlgo.js",[],[],"C:\\Users\\asnas\\OneDrive\\Documents\\code\\React\\dream\\src\\components\\algorithms\\Dijsktra.js",["110"],[],"import React, { useContext } from 'react';\r\nimport { dijkstra, getNodesInShortestPathOrder } from \"../FindPath\";\r\nimport { AlgorithmContext } from '../GraphClass';\r\n\r\n// const AlgorithmContext= React.createContext()\r\n\r\nexport default function Dijsktra() {\r\n\r\n    const contextValue= useContext(AlgorithmContext)\r\n    // console.log(contextValue, 'context')\r\n\r\n    const animateDijkstra = (visitedNodesInOrder, nodesInShortestPathOrder) => {\r\n        for (let i = 0; i <= visitedNodesInOrder.length; i++) {\r\n            if (i === visitedNodesInOrder.length) {\r\n                setTimeout(() => {\r\n                    animateShortestPath(nodesInShortestPathOrder);\r\n                }, 10 * i);\r\n                return;\r\n            }\r\n            setTimeout(() => {\r\n                const node = visitedNodesInOrder[i];\r\n                document.getElementById(\r\n                    `node-${node.row}-${node.col}`\r\n                ).className = \"node node-visited\";\r\n            }, 10 * i);\r\n        }\r\n    };\r\n\r\n    const animateShortestPath = (nodesInShortestPathOrder) => {\r\n        for (let i = 0; i < nodesInShortestPathOrder.length; i++) {\r\n            setTimeout(() => {\r\n                const node = nodesInShortestPathOrder[i];\r\n                document.getElementById(\r\n                    `node-${node.row}-${node.col}`\r\n                ).className = \"node node-shortest-path\";\r\n            }, 50 * i);\r\n        }\r\n    };\r\n    const changeDijkstra = (visitedNodesInOrder, nodesInShortestPathOrder) => {\r\n        for (let i = 0; i <= visitedNodesInOrder.length; i++) {\r\n            if (i === visitedNodesInOrder.length) {\r\n                // setTimeout(() => {\r\n                changeShortestPath(nodesInShortestPathOrder);\r\n                // }, 10 * i);\r\n                return;\r\n            }\r\n            // setTimeout(() => {\r\n            const node = visitedNodesInOrder[i];\r\n            document.getElementById(`node-${node.row}-${node.col}`).className =\r\n                \"node node-visited\";\r\n            // }, 10 * i);\r\n        }\r\n    };\r\n\r\n    const changeShortestPath = (nodesInShortestPathOrder) => {\r\n        for (let i = 0; i < nodesInShortestPathOrder.length; i++) {\r\n            // setTimeout(() => {\r\n            const node = nodesInShortestPathOrder[i];\r\n            document.getElementById(`node-${node.row}-${node.col}`).className =\r\n                \"node node-shortest-path\";\r\n            // }, 50 * i);\r\n        }\r\n    };\r\n\r\n    const changeVisualizeDijkstra = (row, col, end) => {\r\n        contextValue.resetGrid();\r\n        const startNode = contextValue.grid[row][col];\r\n        const finishNode = contextValue.grid[end.row][end.col];\r\n        const visitedNodesInOrder = dijkstra(contextValue.grid, startNode, finishNode);\r\n        const nodesInShortestPathOrder =\r\n            getNodesInShortestPathOrder(finishNode);\r\n        changeDijkstra(visitedNodesInOrder, nodesInShortestPathOrder);\r\n    };\r\n    const visualizeDijkstra = (start, end) => {\r\n        contextValue.resetGrid();\r\n        const startNode = contextValue.grid[start.row][start.col];\r\n        const finishNode = contextValue.grid[end.row][end.col];\r\n        const visitedNodesInOrder = dijkstra(contextValue.grid, startNode, finishNode);\r\n        const nodesInShortestPathOrder =\r\n            getNodesInShortestPathOrder(finishNode);\r\n        animateDijkstra(visitedNodesInOrder, nodesInShortestPathOrder);\r\n    };\r\n    \r\n    return (\r\n        <div>\r\n            <div>\r\n                <button onClick={() => visualizeDijkstra(contextValue.startNode, contextValue.endNode)} className=\"visualizeBtn\">\r\n                    Visualize Dijkstra\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n",[],"C:\\Users\\asnas\\OneDrive\\Documents\\code\\React\\dream\\src\\components\\DFS.js",["111","112"],[],"C:\\Users\\asnas\\OneDrive\\Documents\\code\\React\\dream\\src\\components\\algorithms\\DFS.js",["113"],[],{"ruleId":"114","severity":1,"message":"115","line":6,"column":8,"nodeType":"116","messageId":"117","endLine":6,"endColumn":12},{"ruleId":"118","severity":1,"message":"119","line":306,"column":33,"nodeType":"120","messageId":"121","endLine":306,"endColumn":35},{"ruleId":"118","severity":1,"message":"119","line":316,"column":40,"nodeType":"120","messageId":"121","endLine":316,"endColumn":42},{"ruleId":"114","severity":1,"message":"122","line":162,"column":14,"nodeType":"116","messageId":"117","endLine":162,"endColumn":27},{"ruleId":"114","severity":1,"message":"123","line":7,"column":11,"nodeType":"116","messageId":"117","endLine":7,"endColumn":18},{"ruleId":"118","severity":1,"message":"119","line":15,"column":33,"nodeType":"120","messageId":"121","endLine":15,"endColumn":35},{"ruleId":"118","severity":1,"message":"119","line":25,"column":40,"nodeType":"120","messageId":"121","endLine":25,"endColumn":42},{"ruleId":"114","severity":1,"message":"124","line":1,"column":16,"nodeType":"116","messageId":"117","endLine":1,"endColumn":26},{"ruleId":"114","severity":1,"message":"125","line":7,"column":20,"nodeType":"116","messageId":"117","endLine":7,"endColumn":29},{"ruleId":"114","severity":1,"message":"126","line":65,"column":11,"nodeType":"116","messageId":"117","endLine":65,"endColumn":34},{"ruleId":"118","severity":1,"message":"119","line":15,"column":33,"nodeType":"120","messageId":"121","endLine":15,"endColumn":35},{"ruleId":"118","severity":1,"message":"119","line":25,"column":40,"nodeType":"120","messageId":"121","endLine":25,"endColumn":42},{"ruleId":"114","severity":1,"message":"127","line":91,"column":10,"nodeType":"116","messageId":"117","endLine":91,"endColumn":31},"no-unused-vars","'Find' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'handleOptions' is defined but never used.","'persons' is assigned a value but never used.","'useContext' is defined but never used.","'setRandom' is assigned a value but never used.","'changeVisualizeDijkstra' is assigned a value but never used.","'getUnvisitedNeighbors' is defined but never used."]